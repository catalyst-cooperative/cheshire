---
name: tox-pytest

on: [push, pull_request]

jobs:
  ci-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
      fail-fast: false
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up conda environment for testing
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          cache-environment: true
          condarc: |
            channels:
            - conda-forge
            - defaults
            channel_priority: strict

      - shell: bash -l {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort

      - name: Set default gcp credentials
        id: gcloud-auth
        continue-on-error: true
        uses: "google-github-actions/auth@v2"
        with:
          # you'll need to update the WIF setup in pudl/terraform to allow actions from this repo to access the tox-pytest service account!
          workload_identity_provider: "projects/345950277072/locations/global/workloadIdentityPools/gh-actions-pool/providers/gh-actions-provider"
          service_account: "tox-pytest-github-action@catalyst-cooperative-pudl.iam.gserviceaccount.com"

      - name: Run PyTest with Tox
        run: |
          tox

      - name: Upload test coverage report to CodeCov
        uses: codecov/codecov-action@v4

  ci-notify:
    runs-on: ubuntu-latest
    needs: ci-test
    if: ${{ always() }}
    steps:
      - name: Inform the Codemonkeys
        uses: 8398a7/action-slack@v3
        continue-on-error: true
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              username: 'action-slack',
              icon_emoji: ':octocat:',
              attachments: [{
                color: '${{ needs.ci-test.result }}' === 'success' ? 'good' : '${{ needs.ci-test.result }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_REPO}@${process.env.AS_REF}\n ${process.env.AS_WORKFLOW} (${process.env.AS_COMMIT})\n by ${process.env.AS_AUTHOR}\n Status: ${{ needs.ci-test.result }}`,
              }]
            }
        env:
          GITHUB_TOKEN: ${{ github.token }} # required
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
